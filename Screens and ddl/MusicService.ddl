-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-10-12 22:47:58 MSK
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE action (
    action_id  INTEGER NOT NULL,
    name       VARCHAR2(30) NOT NULL,
    permission VARCHAR2(1 CHAR) NOT NULL
);

ALTER TABLE action ADD CHECK ( action_id = 1 );

ALTER TABLE action
    ADD CHECK ( permission IN ( 'N', 'Y' ) );

ALTER TABLE action ADD CONSTRAINT pk_action PRIMARY KEY ( action_id );

CREATE TABLE album (
    album_id         INTEGER NOT NULL,
    name             VARCHAR2(100) NOT NULL,
    album_cover_path VARCHAR2(255) NOT NULL,
    release_date     DATE NOT NULL,
    favorite         VARCHAR2(1 CHAR) NOT NULL,
    record_label_id  INTEGER NOT NULL,
    musician_id      INTEGER NOT NULL
);

ALTER TABLE album ADD CHECK ( album_id = 1 );

ALTER TABLE album
    ADD CHECK ( favorite IN ( 'N', 'Y' ) );

ALTER TABLE album ADD CHECK ( record_label_id = 1 );

ALTER TABLE album ADD CHECK ( musician_id = 1 );

ALTER TABLE album ADD CONSTRAINT pk_album PRIMARY KEY ( album_id );

CREATE TABLE author (
    author_id INTEGER NOT NULL,
    full_name VARCHAR2(150) NOT NULL
);

ALTER TABLE author ADD CHECK ( author_id = 1 );

ALTER TABLE author ADD CONSTRAINT pk_author PRIMARY KEY ( author_id );

CREATE TABLE genre (
    genre_id INTEGER NOT NULL,
    name     VARCHAR2(30) NOT NULL
);

ALTER TABLE genre ADD CHECK ( genre_id = 1 );

ALTER TABLE genre ADD CONSTRAINT pk_genre PRIMARY KEY ( genre_id );

CREATE TABLE kmtm_action_user (
    action_id INTEGER NOT NULL,
    user_id   INTEGER NOT NULL
);

ALTER TABLE kmtm_action_user ADD CHECK ( action_id = 1 );

ALTER TABLE kmtm_action_user ADD CHECK ( user_id = 1 );

ALTER TABLE kmtm_action_user ADD CONSTRAINT pk_kmtm_action_user PRIMARY KEY ( action_id,
                                                                              user_id );

CREATE TABLE kmtm_album_user (
    album_id INTEGER NOT NULL,
    user_id  INTEGER NOT NULL
);

ALTER TABLE kmtm_album_user ADD CHECK ( album_id = 1 );

ALTER TABLE kmtm_album_user ADD CHECK ( user_id = 1 );

ALTER TABLE kmtm_album_user ADD CONSTRAINT pk_kmtm_album_user PRIMARY KEY ( album_id,
                                                                            user_id );

CREATE TABLE kmtm_author_song (
    song_id   INTEGER NOT NULL,
    author_id INTEGER NOT NULL
);

ALTER TABLE kmtm_author_song ADD CHECK ( song_id = 1 );

ALTER TABLE kmtm_author_song ADD CHECK ( author_id = 1 );

ALTER TABLE kmtm_author_song ADD CONSTRAINT pk_kmtm_author_song PRIMARY KEY ( song_id,
                                                                              author_id );

CREATE TABLE kmtm_genre_song (
    genre_id INTEGER NOT NULL,
    song_id  INTEGER NOT NULL
);

ALTER TABLE kmtm_genre_song ADD CHECK ( genre_id = 1 );

ALTER TABLE kmtm_genre_song ADD CHECK ( song_id = 1 );

ALTER TABLE kmtm_genre_song ADD CONSTRAINT pk_kmtm_genre_song PRIMARY KEY ( genre_id,
                                                                            song_id );

CREATE TABLE kmtm_musician_user (
    musician_id INTEGER NOT NULL,
    user_id     INTEGER NOT NULL
);

ALTER TABLE kmtm_musician_user ADD CHECK ( musician_id = 1 );

ALTER TABLE kmtm_musician_user ADD CHECK ( user_id = 1 );

ALTER TABLE kmtm_musician_user ADD CONSTRAINT pk_kmtm_musician_user PRIMARY KEY ( musician_id,
                                                                                  user_id );

CREATE TABLE kmtm_song_playlist (
    song_id     INTEGER NOT NULL,
    playlist_id INTEGER NOT NULL
);

ALTER TABLE kmtm_song_playlist ADD CHECK ( song_id = 1 );

ALTER TABLE kmtm_song_playlist ADD CHECK ( playlist_id = 1 );

ALTER TABLE kmtm_song_playlist ADD CONSTRAINT pk_kmtm_song_playlist PRIMARY KEY ( song_id,
                                                                                  playlist_id );

CREATE TABLE musician (
    musician_id     INTEGER NOT NULL,
    name            VARCHAR2(150) NOT NULL,
    logo_path       VARCHAR2(255) NOT NULL,
    foundation_year SMALLINT NOT NULL,
    brief_biography CLOB,
    favorite        VARCHAR2(1 CHAR) NOT NULL,
    record_label_id INTEGER NOT NULL
);

ALTER TABLE musician ADD CHECK ( musician_id = 1 );

ALTER TABLE musician ADD CHECK ( foundation_year BETWEEN 1 AND 9999 );

ALTER TABLE musician
    ADD CHECK ( favorite IN ( 'N', 'Y' ) );

ALTER TABLE musician ADD CHECK ( record_label_id = 1 );

ALTER TABLE musician ADD CONSTRAINT pk_musician PRIMARY KEY ( musician_id );

CREATE TABLE playlist (
    playlist_id INTEGER NOT NULL,
    name        VARCHAR2(150) NOT NULL,
    description CLOB,
    user_id     INTEGER NOT NULL
);

ALTER TABLE playlist ADD CHECK ( playlist_id = 1 );

ALTER TABLE playlist ADD CHECK ( user_id = 1 );

ALTER TABLE playlist ADD CONSTRAINT pk_playlist PRIMARY KEY ( playlist_id );

CREATE TABLE record_label (
    record_label_id INTEGER NOT NULL,
    name            VARCHAR2(100) NOT NULL
);

ALTER TABLE record_label ADD CHECK ( record_label_id = 1 );

ALTER TABLE record_label ADD CONSTRAINT pk_record_label PRIMARY KEY ( record_label_id );

CREATE TABLE service_user (
    user_id              INTEGER NOT NULL,
    username             VARCHAR2(30) NOT NULL,
    password             VARCHAR2(30) NOT NULL,
    email                VARCHAR2(50),
    profile_picture_path VARCHAR2(255) NOT NULL,
    musician             VARCHAR2(1 CHAR) NOT NULL,
    staff                VARCHAR2(1 CHAR) NOT NULL
);

ALTER TABLE service_user ADD CHECK ( user_id = 1 );

ALTER TABLE service_user
    ADD CHECK ( musician IN ( 'N', 'Y' ) );

ALTER TABLE service_user
    ADD CHECK ( staff IN ( 'N', 'Y' ) );

ALTER TABLE service_user ADD CONSTRAINT pk_user PRIMARY KEY ( user_id );

CREATE TABLE song (
    song_id  INTEGER NOT NULL,
    name     VARCHAR2(100) NOT NULL,
    duration DATE NOT NULL,
    favorite VARCHAR2(1 CHAR) NOT NULL,
    album_id INTEGER NOT NULL
);

ALTER TABLE song ADD CHECK ( song_id = 1 );

ALTER TABLE song
    ADD CHECK ( favorite IN ( 'N', 'Y' ) );

ALTER TABLE song ADD CHECK ( album_id = 1 );

ALTER TABLE song ADD CONSTRAINT pk_song PRIMARY KEY ( song_id );

ALTER TABLE kmtm_action_user
    ADD CONSTRAINT fk_action_kmtm_action_user FOREIGN KEY ( action_id )
        REFERENCES action ( action_id );

ALTER TABLE kmtm_album_user
    ADD CONSTRAINT fk_album_kmtm_album_user FOREIGN KEY ( album_id )
        REFERENCES album ( album_id );

ALTER TABLE album
    ADD CONSTRAINT fk_album_musician FOREIGN KEY ( musician_id )
        REFERENCES musician ( musician_id );

ALTER TABLE album
    ADD CONSTRAINT fk_album_record_label FOREIGN KEY ( record_label_id )
        REFERENCES record_label ( record_label_id );

ALTER TABLE kmtm_author_song
    ADD CONSTRAINT fk_author_kmtm_author_song FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE kmtm_genre_song
    ADD CONSTRAINT fk_genre_kmtm_genre_song FOREIGN KEY ( genre_id )
        REFERENCES genre ( genre_id );

ALTER TABLE kmtm_musician_user
    ADD CONSTRAINT fk_musician_kmtm_musician_user FOREIGN KEY ( musician_id )
        REFERENCES musician ( musician_id );

ALTER TABLE musician
    ADD CONSTRAINT fk_musician_record_label FOREIGN KEY ( record_label_id )
        REFERENCES record_label ( record_label_id );

ALTER TABLE kmtm_song_playlist
    ADD CONSTRAINT fk_playlist_kmtm_song_playlist FOREIGN KEY ( playlist_id )
        REFERENCES playlist ( playlist_id );

ALTER TABLE playlist
    ADD CONSTRAINT fk_playlist_user FOREIGN KEY ( user_id )
        REFERENCES service_user ( user_id );

ALTER TABLE song
    ADD CONSTRAINT fk_song_album FOREIGN KEY ( album_id )
        REFERENCES album ( album_id );

ALTER TABLE kmtm_author_song
    ADD CONSTRAINT fk_song_kmtm_author_song FOREIGN KEY ( song_id )
        REFERENCES song ( song_id );

ALTER TABLE kmtm_genre_song
    ADD CONSTRAINT fk_song_kmtm_genre_song FOREIGN KEY ( song_id )
        REFERENCES song ( song_id );

ALTER TABLE kmtm_song_playlist
    ADD CONSTRAINT fk_song_kmtm_song_playlist FOREIGN KEY ( song_id )
        REFERENCES song ( song_id );

ALTER TABLE kmtm_action_user
    ADD CONSTRAINT fk_user_kmtm_action_user FOREIGN KEY ( user_id )
        REFERENCES service_user ( user_id );

ALTER TABLE kmtm_album_user
    ADD CONSTRAINT fk_user_kmtm_album_user FOREIGN KEY ( user_id )
        REFERENCES service_user ( user_id );

ALTER TABLE kmtm_musician_user
    ADD CONSTRAINT fk_user_kmtm_musician_user FOREIGN KEY ( user_id )
        REFERENCES service_user ( user_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             65
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
